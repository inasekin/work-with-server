[{"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/random-planet/random-planet.js":"1","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/api/swapi-service.js":"2","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/app/app.js":"3","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/header/header.js":"4","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/loader/loader.js":"5","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/loader/index.js":"6","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/error-indicator/error-indicator.js":"7","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/index.js":"8","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/item-list/item-list.js":"9","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/person-details/person-details.js":"10","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/person-details/index.js":"11","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/random-planet/index.js":"12","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/header/index.js":"13","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/item-list/index.js":"14"},{"size":2282,"mtime":1610487674129,"results":"15","hashOfConfig":"16"},{"size":2932,"mtime":1610486131348,"results":"17","hashOfConfig":"16"},{"size":1130,"mtime":1610488354652,"results":"18","hashOfConfig":"16"},{"size":650,"mtime":1610486361191,"results":"19","hashOfConfig":"16"},{"size":600,"mtime":1610235546551,"results":"20","hashOfConfig":"16"},{"size":54,"mtime":1610235546550,"results":"21","hashOfConfig":"16"},{"size":502,"mtime":1610235546545,"results":"22","hashOfConfig":"16"},{"size":158,"mtime":1610235546557,"results":"23","hashOfConfig":"16"},{"size":937,"mtime":1610486710781,"results":"24","hashOfConfig":"16"},{"size":1710,"mtime":1610487954196,"results":"25","hashOfConfig":"16"},{"size":76,"mtime":1610235546551,"results":"26","hashOfConfig":"16"},{"size":73,"mtime":1610235546553,"results":"27","hashOfConfig":"16"},{"size":54,"mtime":1610235546547,"results":"28","hashOfConfig":"16"},{"size":61,"mtime":1610235546548,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"zc6d9b",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/random-planet/random-planet.js",["63"],"import React, { Component } from 'react';\n\nimport Loader from '../loader';\nimport SwapiService from '../../api/swapi-service';\n\nimport './random-planet.css';\nimport ErrorIndicator from '../error-indicator/error-indicator';\n\nexport default class RandomPlanet extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    planet: {},\n    loading: true,\n    error: false\n  };\n\n  componentDidMount() {\n    this.updatePlanet();\n    this.interval = setInterval(this.updatePlanet, 5000);\n    // clearInterval(this.interval);\n  }\n\n  componentWillMount() {\n    clearInterval(this.interval);\n  }\n\n  onPlanetLoaded = (planet) => {\n    this.setState({\n      planet,\n      loading: false\n    });\n  };\n\n  onError = (err) => {\n    this.setState({\n      error: true,\n      loading: false\n    })\n  };\n\n  updatePlanet = () => {\n    const id = Math.floor(Math.random()*25) + 3;\n    this.swapiService\n      .getPlanet(id)\n      .then(this.onPlanetLoaded)\n      .catch(this.onError);\n  }\n\n  render() {\n    const { planet, loading, error } = this.state;\n\n    const hasData = !(loading || error)\n\n    const errorMessage = error ? <ErrorIndicator/> : null\n    const spinner = loading ? <Loader /> : null;\n    const content = hasData ? <PlanetView planet={planet}/> : null;\n\n    return (\n      <div className=\"random-planet jumbotron rounded\">\n        {errorMessage}\n        {spinner}\n        {content}\n      </div>\n    );\n  }\n}\n\nconst PlanetView = ({ planet }) => {\n\n  const { id, name, population,\n    rotationPeriod, diameter } = planet;\n\n  return (\n    <React.Fragment>\n      <img className=\"planet-image\"\n           src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\n      <div>\n        <h4>{name}</h4>\n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            <span className=\"term\">Population</span>\n            <span>{population}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Rotation Period</span>\n            <span>{rotationPeriod}</span>\n          </li>\n          <li className=\"list-group-item\">\n            <span className=\"term\">Diameter</span>\n            <span>{diameter}</span>\n          </li>\n        </ul>\n      </div>\n    </React.Fragment>\n  );\n};","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/api/swapi-service.js",["64"],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/app/app.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/header/header.js",["65","66","67","68"],"import React from 'react';\n\nimport './header.css';\n\nconst Header = () => {\n  return (\n    <div className=\"header d-flex\">\n      <div className=\"container\">\n        <h3 className=\"header__title\">\n          <a href=\"#\">\n            StarDB\n          </a>\n        </h3>\n        <ul className=\"header__navigation\">\n          <li>\n            <a href=\"#\" className=\"text-white\">People</a>\n          </li>\n          <li>\n            <a href=\"#\" className=\"text-white\">Planets</a>\n          </li>\n          <li>\n            <a href=\"#\" className=\"text-white\">Starships</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/loader/loader.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/loader/index.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/error-indicator/error-indicator.js",["69"],"import React from 'react';\n\nimport './error-indicator.css';\nimport icon from './death-star.png';\n\nconst ErrorIndicator = () => {\n    return (\n        <div className=\"error-indicator\">\n            <img src={icon} />\n            <span className=\"boom\">BOOM!</span>\n            <span>\n                something has gone terribly wrong\n            </span>\n            <span>\n                (but we already sent droids to fix this)\n            </span>\n        </div>\n    )\n}\n\nexport default ErrorIndicator;",["70","71"],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/index.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/item-list/item-list.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/person-details/person-details.js",["72","73"],"import React, { Component } from 'react';\nimport SwapiService from '../../api/swapi-service';\nimport Loader from '../loader';\n\nimport './person-details.css';\n\nexport default class PersonDetails extends Component {\n\n  swapiService = new SwapiService();\n\n  state = {\n    person: null\n  }\n\n  componentDidMount() {\n    this.updatePerson();\n  }\n\n  componentDidUpdate(prevProps) {\n    if(this.props.personId !== prevProps.personId) {\n      this.updatePerson();\n    }\n  }\n\n  updatePerson() {\n    const {personId} = this.props;\n    if(!personId) {\n      return;\n    }\n\n    this.swapiService\n      .getPerson(personId)\n      .then((person) => {\n        this.setState({person});\n      });\n  }\n\n  render() {\n    const {person} = this.state;\n\n    if (!this.state.person) {\n      return <span>Select a person from a list</span>;\n      // Loader\n    }\n\n    const { id, height, name, gender, eye_color } = person;\n\n    return (\n      <div className=\"person-details card\">\n        <img className=\"person-image\"\n          src={`https://starwars-visualguide.com/assets/img/characters/${id}.jpg`} />\n\n        <div className=\"card-body\">\n          <h4>{name}</h4>\n          <ul className=\"list-group list-group-flush\">\n            <li className=\"list-group-item\">\n              <span className=\"term\">Gender</span>\n              <span>{gender}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Eye color</span>\n              <span>{eye_color}</span>\n            </li>\n            <li className=\"list-group-item\">\n              <span className=\"term\">Height</span>\n              <span>{height}</span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    )\n  }\n}","/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/person-details/index.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/random-planet/index.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/header/index.js",[],"/Users/nasekinid/Desktop/react/react-apps/srar-db/src/components/item-list/index.js",[],{"ruleId":"74","severity":1,"message":"75","line":77,"column":7,"nodeType":"76","endLine":78,"endColumn":84},{"ruleId":"77","severity":1,"message":"78","line":9,"column":50,"nodeType":"79","messageId":"80","endLine":9,"endColumn":51},{"ruleId":"81","severity":1,"message":"82","line":10,"column":11,"nodeType":"76","endLine":10,"endColumn":23},{"ruleId":"81","severity":1,"message":"82","line":16,"column":13,"nodeType":"76","endLine":16,"endColumn":48},{"ruleId":"81","severity":1,"message":"82","line":19,"column":13,"nodeType":"76","endLine":19,"endColumn":48},{"ruleId":"81","severity":1,"message":"82","line":22,"column":13,"nodeType":"76","endLine":22,"endColumn":48},{"ruleId":"74","severity":1,"message":"75","line":9,"column":13,"nodeType":"76","endLine":9,"endColumn":31},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"74","severity":1,"message":"75","line":50,"column":9,"nodeType":"76","endLine":51,"endColumn":86},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'Loader' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]